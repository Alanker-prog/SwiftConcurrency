//
//  8.StructClassActor.swift
//  SwiftConcurrency
//
//  Created by Алан Парастаев on 24.10.2025.
//

import SwiftUI

struct StructClassActor: View {
    var body: some View {
        Text(/*@START_MENU_TOKEN@*/"Hello, World!"/*@END_MENU_TOKEN@*/)
    }
}

#Preview {
   StructClassActor()
}
 /*
  VALUE TYPES(типы значения):
  - Struct, Enum, String, Int...
  - Хранятся в Stack
  - Быстрее
  - Потокобезопасные(Thread safe)
  - передаем копию данных
  (Типы значения хранятся в Stack, У каждого Stack есть свой отдельный  Thread(поток)
  
  REFERENCE TYPES(сылочные типы):
  - Class, Function, Actor
  - Хрвняться в Heap(куча)
  - Медленне, но синхронизированно
  - Не потокобезопасные(Not thread safe)
  - ссылаемся на одно и тоже место в памяти
  
  - - - - - - - - - - - - - - - - - - - - - -
  
  Stack:
  - В Stack хранятся типы значения
  - Перемнные хранятся непосредственно в самой ячейки Stack, и доступ к этой памяти в Stack очень быстрый
  - У каждого потока есть собственный отдельный Stack!
  
  
  Heap:
  - Хранятся ссылочные типы
  - Heap(ячейка в памяти общего пользования), она одна на все потоки потому что она нужна для синхранизации классов и объектов в приложении
  
  ⚠️ Actor - актор это тоже самое что и Class, только Actor потокобезопасный(мы можем в нем указывать проритеты выполнения задач и ставить в ижидание другие задачи через ключевое слово "await" ,так как Actor использует асинхронную среду)
  
  Struct: ипользуем для Data Models(модель данных) и Views
  Class: ипользуем для View Models
  Actor: ипользуем для Manager и Data Store Синглтонов(они обычно используются для получения данных из (Data base)базы данных), такие общии классы можно сделать акторами
  */
