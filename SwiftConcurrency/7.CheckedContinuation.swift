//
//  7.CheckedContinuation.swift
//  SwiftConcurrency
//
//  Created by –ê–ª–∞–Ω –ü–∞—Ä–∞—Å—Ç–∞–µ–≤ on 20.10.2025.
//

import SwiftUI
import Combine

class CheckedContinuationBootcampNetworkManager {
    
    /*
     ‚úÖ func getData(url: URL) async throws -> Data
        ‚û°Ô∏è –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ URL, –∏—Å–ø–æ–ª—å–∑—É—è URLSession –∏ async/await. –≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Swift 5.5+ —Å async/await.
        ‚û°Ô∏è –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ URLSession.shared.data(from:delegate:) ‚Äì —ç—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π API.
        ‚û°Ô∏è –û–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂ (data, response).
        ‚û°Ô∏è –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç data.–ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ ‚Äì –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ—Ç –µ—ë –¥–∞–ª—å—à–µ.
     */
    func getData(url: URL) async throws -> Data {
        do {
         let (data, _) = try await URLSession.shared.data(from: url, delegate: nil)
            return data
        } catch  {
            throw error
        }
    }
    
    /*
     ‚ú¥Ô∏è –≠—Ç–æ—Ç —Å–ø–æ—Å–æ–± –Ω—É–∂–µ–Ω, –µ—Å–ª–∏ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å —Å API, –∫–æ—Ç–æ—Ä–æ–µ –µ—â—ë –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç async/await.(–ü–æ —Å—É—Ç–∏ –º—ã –±–µ—Ä–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é(–æ–±–µ—Ä—Ç–∫—É) –≤ –µ–µ —Ç–µ–ª–æ –≤—Å—Ç–∞–≤–ª—è–µ–º –ù–ï –ê—Å–∏–Ω—Ö—Ä–æ–Ω—ã–π(—Å—Ç–∞—Ä—ã–π) API –º–µ—Ç–æ–¥ dataTask. –í —Ç–µ–ª–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –∏ –Ω–∞–º –Ω—É–∂–Ω–æ –ø–æ—Ç–æ–º –∏—Ö —Å–Ω–æ–≤–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ù–ï –ê—Å–∏–Ω—Ö—Ä–æ–Ω—ã–π –∫–æ–¥ –≤ —Ç–µ–ª–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è. –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ —Å –ø–æ–º–æ—â—å—é .resume()
     
     ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç withCheckedThrowingContinuation, —á—Ç–æ–±—ã –æ–±–µ—Ä–Ω—É—Ç—å —Å—Ç–∞—Ä—ã–π callback API (URLSession.shared.dataTask) –≤ –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ async/await.
     
     ‚ö†Ô∏è return try await withCheckedThrowingContinuation - —ç—Ç–æ –∑–∞–º—ã–∫–∞–Ω–∏–µ(–æ–±–µ—Ä—Ç–∫–∞).
        ‚û°Ô∏è { continuation in - –ü–∏—à–µ–º –≤ —Ä—É—á–Ω—É—é
        ‚û°Ô∏è –í —Ç–µ–ª–æ –∑–∞–º—ã–∫–∞–Ω–∏—è –º—ã –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –ù–ï –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ .dataTask, –∫–æ–≥–¥–∞ –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞,—Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–º—ã–∫–∞–Ω–∏–µ dataTask –∏ –æ–Ω–æ –≤–æ–∑–≤—Ä–∞—à–∞–µ—Ç –∫–∞—Ä—Ç–µ–∂ -> data, response, error in
     
     ‚úÖ if let data = data { - –£—Å–ª–æ–≤–∏—è –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã —Å –∑–∞–º—ã–∫–∞–Ω–∏—è dataTask
        ‚û°Ô∏è –ï—Å–ª–∏ –µ—Å—Ç—å data ‚Üí –≤—ã–∑—ã–≤–∞–µ–º continuation.resume(returning: data).
        ‚û°Ô∏è –ï—Å–ª–∏ –µ—Å—Ç—å error ‚Üí –≤—ã–∑—ã–≤–∞–µ–º continuation.resume(throwing: error).
        ‚û°Ô∏è –ï—Å–ª–∏ –Ω–∏ —Ç–æ–≥–æ, –Ω–∏ –¥—Ä—É–≥–æ–≥–æ ‚Äî —Å–æ–∑–¥–∞–µ–º –∏ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É URLError(.badURL).
     
     ‚ö†Ô∏è .resume() –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞.
     */
    func getData2(url: URL) async throws -> Data {
        return try await withCheckedThrowingContinuation { continuation in
            URLSession.shared.dataTask(with: url) { data, response, error in
                if let data = data {
                    continuation.resume(returning: data)
                } else if let error = error {
                    continuation.resume(throwing: error)
                } else {
                    continuation.resume(throwing: URLError(.badURL))
                }
            }
            .resume()
        }
    }

    // –≠—Ç–æ –ø—Ä–∏–º–µ—Ä —Å—Ç–∞—Ä–æ–≥–æ —Å—Ç–∏–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç–∏ ‚Äì —Å callback(–º—ã –æ–±–µ—Ä–Ω–µ–º –µ–µ –≤ async —Ñ—É–Ω–∫—Ü–∏—é –Ω–∏–∂–µ)
    func getHeartImageFromDatabae(completionHandler: @escaping(_ image: UIImage) ->()) {
        DispatchQueue.main.asyncAfter(deadline: .now() + 5) {
            completionHandler(UIImage(systemName: "heart.fill")!)
        }
    }
    
    /*
     ‚ú¥Ô∏è –û–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â—É—é —Ñ—É–Ω–∫—Ü–∏—éüëÜ —Å callback'–æ–º –≤ async-—Ñ—É–Ω–∫—Ü–∏—é —Å –ø–æ–º–æ—â—å—é withCheckedContinuation.
     
     ‚úÖ await withCheckedContinuation - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç withCheckedContinuation, —á—Ç–æ–±—ã –æ–±–µ—Ä–Ω—É—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å callback.
     ‚úÖ –í –∑–∞–º—ã–∫–∞–Ω–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é(–ù–µ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é) —Ñ—É–Ω–∫—Ü–∏–∏ getHeartImageFromDatabae.
     ‚úÖ –ö–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω image, –≤—ã–∑—ã–≤–∞–µ—Ç continuation.resume(returning: image).
     */
    func getHeartImageFromDatabae() async -> UIImage {
        await withCheckedContinuation { continuation in
            getHeartImageFromDatabae { image in
                continuation.resume(returning: image)
            }
        }
    }
}

class CheckedContinuationBootcampViewModel: ObservableObject {
    
    @Published var image: UIImage? = nil
    let networkManager = CheckedContinuationBootcampNetworkManager()
    
    /*
     ‚ú¥Ô∏è func getImage() async
        ‚û°Ô∏è –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ image.
        ‚û°Ô∏è –≠—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤ UI.
     
     ‚úÖ –°–æ–∑–¥–∞–µ—Ç URL –∏–∑ —Å—Ç—Ä–æ–∫–∏ "https://picsum.photos/300" (—Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 300x300).

     ‚úÖ –í—ã–∑—ã–≤–∞–µ—Ç networkManager.getData2(url:), —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ (—á–µ—Ä–µ–∑ continuation).

     ‚úÖ –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å UIImage(data:) –∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:

     ‚úÖ –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ –≥–ª–∞–≤–Ω—ã–π –ø–æ—Ç–æ–∫ (MainActor.run) –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤—É self.image.

     ‚úÖ–ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ ‚Äî –≤—ã–≤–æ–¥–∏—Ç –µ—ë –≤ –∫–æ–Ω—Å–æ–ª—å.
     */
    func getImage() async {
        guard let url = URL(string: "https://picsum.photos/300") else { return }
        
        do {
            let data = try await networkManager.getData2(url: url)
            
            if let image = UIImage(data: data) {
                await MainActor.run {
                    self.image = image
                }
            }
        } catch  {
            print(error)
        }
    }
    
    // –ü–æ–ª—É—á–∞–µ—Ç –∏–∫–æ–Ω–∫—É "—Å–µ—Ä–¥—Ü–µ" –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ (—á–µ—Ä–µ–∑ withCheckedContinuation).–∏–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ "–∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö".
    func getHeartImage() async {
        self.image = await networkManager.getHeartImageFromDatabae()
    }
}


struct CheckedContinuationBootcamp: View {
    
    @StateObject var vm = CheckedContinuationBootcampViewModel()
    
    var body: some View {
        ZStack {
            if let image = vm.image {
                Image(uiImage: image)
                    .resizable()
                    .scaledToFit()
                    .frame(width: 200, height: 200)
            }
        }
        .task {
            //await vm.getImage()
            await vm.getHeartImage()
        }
    }
}

#Preview {
    CheckedContinuationBootcamp()
}
