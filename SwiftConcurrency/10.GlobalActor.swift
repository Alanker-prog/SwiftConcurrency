//
//  10.GlobalActor.swift
//  SwiftConcurrency
//
//  Created by –ê–ª–∞–Ω –ü–∞—Ä–∞—Å—Ç–∞–µ–≤ on 24.10.2025.
//


/*
 ‚ú¥Ô∏è –ß—Ç–æ —Ç–∞–∫–æ–µ @globalActor –∏ –∑–∞—á–µ–º –æ–Ω –Ω—É–∂–µ–Ω
    ‚û°Ô∏è –í Swift –∞–∫—Ç–æ—Ä—ã (actors) ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –ø–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–æ—Ç–æ–∫ –º–æ–∂–µ—Ç –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—é –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.–ê –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∞–∫—Ç–æ—Ä (@globalActor) ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–± —Å–∫–∞–∑–∞—Ç—å: ¬´–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–æ–ª–∂–Ω—ã –≤—Å–µ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –∞–∫—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞¬ª.
 
 üß© –ò—Ç–æ–≥–æ: —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ü–µ–ª–æ–º
     ‚û°Ô∏è –°–æ–∑–¥–∞—ë—Ç—Å—è –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∞–∫—Ç–æ—Ä MyFirstGlobalActor, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–º MyNewDataManager.
     ‚û°Ô∏è –ú–µ—Ç–æ–¥ getData() –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —ç—Ç–æ–≥–æ –∞–∫—Ç–æ—Ä–∞.
     ‚û°Ô∏è –û–Ω –≤—ã–∑—ã–≤–∞–µ—Ç getDataFromDatabase() (–ø–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ).
     ‚û°Ô∏è –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π –ø–æ—Ç–æ–∫, –≥–¥–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è dataArrey.
     ‚û°Ô∏è SwiftUI –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –ø–æ—Ç–æ–º—É —á—Ç–æ dataArrey ‚Äî —ç—Ç–æ @Published.

 
 üß© –¢–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –Ω—É–∂–µ–Ω –¥–ª—è:
     ‚û°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –æ–±—â–∏–º –¥–∞–Ω–Ω—ã–º –∏–∑ —Ä–∞–∑–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤.
     ‚û°Ô∏è –†–∞–∑–¥–µ–ª–µ–Ω–∏—è –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ (MyFirstGlobalActor), –∏ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–±–Ω–æ–≤–ª—è–µ—Ç UI (@MainActor).
     ‚û°Ô∏è –ò–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –Ω–∞–ø–æ–¥–æ–±–∏–µ ‚ÄúModifying state from a background thread‚Äù.
 */
import SwiftUI
import Combine

/*
 ‚úÖ @globalActor final class MyFirstGlobalActor { - –ö–ª–∞—Å—Å –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ –ª—å–∑—è –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è
 
 ‚úÖ static let shared = MyNewDataManager() - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ,(‚ö†Ô∏è–æ–Ω–æ –¥–æ–ª–∂–Ω–æ –≤—Å–µ–≥–¥–∞ –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è shared. –≠—Ç–æ —É—Å–ª–æ–≤–∏–µ Aplle)  –∫–æ—Ç–æ—Ä–æ–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∞–∫—Ç–æ—Ä–∞, —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∑–∞–¥–∞—á.–ó–¥–µ—Å—å —ç—Ç–æ —ç–∫–∑–µ–º–ø–ª—è—Ä MyNewDataManager.
 */
@globalActor final class MyFirstGlobalActor {
    
    static let shared = MyNewDataManager()
}

/*
 ‚úÖ actor ‚Äî —ç—Ç–æ –ø–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∏ –º–µ—Ç–æ–¥–æ–≤.
 ‚úÖ –ó–¥–µ—Å—å —É –Ω–∞—Å –µ—Å—Ç—å –º–µ—Ç–æ–¥ getDataFromDatabase(), –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫.(–í —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ –æ–Ω –º–æ–≥ –±—ã –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ API.)
 */
actor MyNewDataManager {
    
    func getDataFromDatabase() -> [String] {
        return ["One", "Two", "Three", "Four"]
    }
}


/*
 ‚úÖ @MainActor @Published var dataArrey: [String] = []
    ‚û°Ô∏è –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ dataArrey –¥–æ–ª–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ (UI). ‚ö†Ô∏è –≠—Ç–æ –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–æ –µ—Å–ª–∏ –Ω–∞—à –º–∞—Å—Å–∏–≤ –æ–±–Ω–æ–≤–ª—è–µ—Ç —ç–∫—Ä–∞–Ω(–∫–∞–∫ —Ä–∞–∑ —ç—Ç–æ –Ω–∞—à —Å–ª—É—á–∞–π) –º—ã –º–æ–∂–µ–º —É–∫–∞–∑–∞—Ç—å  @MainActor –∏ –æ–Ω –±—É–¥–µ—Ç –æ—å–Ω–æ–≤–ª—è—Ç—å—Å—è —Ç–æ—å–∫–æ –≤ –≥–ª–∞–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ, –∏ —Ç–µ–ø–µ—Ä—å –µ—Å–ª–∏ –º—ã –≥–¥–µ —Ç–æ –∑–∞–±—É–¥–µ–º –ø—Ä–µ–≤–µ—Å—Ç–∏ dataArrey –≤ –≥–ª–∞–≤–Ω—ã–π –ø–æ—Ç–æ–∫ –∫–æ–º–ø–µ–ª—è—Ç–æ—Ä –Ω–∞—Å –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç –∫—Ä–∞—Å–Ω–æ–π –æ—à–∏–±–∫–æ–π (–±–µ–∑ —ç—Ç–æ–≥–æ –æ–Ω –Ω–∞–º –±—ã –ø—Ä—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–ª —Ñ–∏–æ–ª–µ—Ç—ã–≤—É—é –æ—à–∏–±–∫—É —É–∂–µ –∫–æ–≥–¥–∞ –º—ã —Å–æ–±—Ä–∞–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–≤ —Å–∏–º—É–ª—è—Ç–æ—Ä–µ)
 
 ‚úÖ let manager = MyFirstGlobalActor.shared -  —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä actor MyNewDataManager, –∫–æ—Ç–æ—Ä—ã–π –º—ã —É–∫–∞–∑–∞–ª–∏ –∫–∞–∫ shared.
 */
class GlobalActorBootcampViewModel: ObservableObject {
    
   @MainActor @Published var dataArrey: [String] = []
    let manager = MyFirstGlobalActor.shared
    
    @MyFirstGlobalActor func getData() async {
        Task {
            let data = await manager.getDataFromDatabase()
            await MainActor.run {
                self.dataArrey = data
            }
             
        }
    }
}

struct GlobalActorBootcamp: View {
    
    @StateObject var vm = GlobalActorBootcampViewModel()
    
    var body: some View {
        ScrollView {
            VStack {
                ForEach(vm.dataArrey, id: \.self) {
                    Text($0)
                        .font(.headline)
                }
            }
            .task {
               await vm.getData()
            }
        }
    }
}

#Preview {
    GlobalActorBootcamp()
}
